version: '3.8'

services:
  # PostgreSQL Database
  db:
    image: postgres:15-alpine
    container_name: lovestory-db
    restart: unless-stopped
    environment:
      POSTGRES_DB: lovestory
      POSTGRES_USER: ${DB_USER:-postgres}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-1233}
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 10s
      timeout: 5s
      retries: 5

  # Backend Spring Boot Application
  backend:
    build:
      context: ./BE
      dockerfile: Dockerfile
    container_name: lovestory-backend
    restart: unless-stopped
    depends_on:
      db:
        condition: service_healthy
    environment:
      # Database connection
      DATABASE_URL: jdbc:postgresql://db:5432/lovestory
      SPRING_DATASOURCE_USERNAME: ${DB_USER:-postgres}
      SPRING_DATASOURCE_PASSWORD: ${DB_PASSWORD:-1233}

      # JWT Security
      APP_JWT_SECRET: ${JWT_SECRET:-}
      APP_JWT_EXPIRATION_MS: ${JWT_EXPIRATION_MS:-86400000}

      # Admin User Configuration
      ADMIN_USERNAME: ${ADMIN_USERNAME:-admin}
      ADMIN_EMAIL: ${ADMIN_EMAIL:-admin@lovestory.com}
      ADMIN_PASSWORD: ${ADMIN_PASSWORD:-Anhyeuemnhieulam@1233}

      # Profile activation
      SPRING_PROFILES_ACTIVE: ${SPRING_PROFILES_ACTIVE:-dev}

      # CORS configuration
      APP_CORS_ALLOWED_ORIGINS: ${CORS_ALLOWED_ORIGINS:-https://togetherforever.site}
    volumes:
      - backend_uploads:/app/uploads
    ports:
      - "8080:8080"

  # Frontend Nginx Application
  frontend:
    build:
      context: ./FE
      dockerfile: Dockerfile
    container_name: lovestory-frontend
    restart: unless-stopped
    depends_on:
      - backend
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./ssl:/etc/nginx/ssl:ro
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf:ro

volumes:
  postgres_data:
  backend_uploads:
